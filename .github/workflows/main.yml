name: Build and Push to Google Artifact Registry (Gradle)

on:
  push:
    branches:
      - main # Or your main development branch

env:
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_REGION: ${{ secrets.GCP_REGION }} # e.g., us-central1
  GCP_ARTIFACT_REGISTRY_LOCATION: ${{ env.GCP_REGION }} # Assuming same region
  GCP_ARTIFACT_REGISTRY_NAME: ${{ secrets.GCP_ARTIFACT_REGISTRY_NAME }} # e.g., my-java-repo
  GCP_ARTIFACT_REGISTRY_REPOSITORY_FORMAT: maven # Or your repository format
  MAVEN_GROUP_ID: com.azureprep.com # Replace with your Maven group ID (used by Spring Boot Gradle plugin)
  MAVEN_ARTIFACT_ID: my-app # Replace with your Maven artifact ID (used by Spring Boot Gradle plugin)
  JAVA_VERSION: 17
  GRADLE_OPTS: "-Dorg.gradle.daemon=false" # Recommended for CI

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      id-token: write # For workload identity federation
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'

      - name: Set up Gradle
        uses: gradle/gradle-build-action@v2

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build -x test

      - name: Authenticate to Google Cloud
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: 'projects/${{ secrets.GCP_PROJECT_NUMBER }}/locations/global/workloadIdentityPools/github-oidc-pool/providers/github-oidc-provider' # Replace with your WIF provider
          service_account: 'your-service-account@${{ env.GCP_PROJECT_ID }}.iam.gserviceaccount.com' # Replace with your service account email

      - name: Configure Gradle for Artifact Registry
        run: |
          cat > gradle.properties <<EOF
          maven.repository.id=${{ env.GCP_ARTIFACT_REGISTRY_LOCATION }}-maven.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.GCP_ARTIFACT_REGISTRY_NAME }}
          maven.repository.url=https://${{ env.GCP_ARTIFACT_REGISTRY_LOCATION }}-maven.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.GCP_ARTIFACT_REGISTRY_NAME }}
          maven.username=unused
          maven.password=${{ steps.auth.outputs.id_token }}
          EOF

      - name: Publish to Google Artifact Registry
        run: ./gradlew publish
